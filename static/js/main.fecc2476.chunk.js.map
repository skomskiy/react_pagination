{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pagesCount","result","Math","floor","getPages","pages","firstPage","lastPage","prevPage","nextPage","handleArrows","page","className","classNames","disabled","onClick","href","map","active","items","App","useState","setPerPage","setCurrentPage","maxEnd","itemEnd","itemStart","id","value","onChange","event","target","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAOtC,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,aAGIC,EDVD,SAAkBH,EAAiBD,GACxC,IAAIK,EAAS,EAUb,OARIL,EAAQC,IAAY,IACtBI,EAASL,EAAQC,GAGfD,EAAQC,IAAY,IACtBI,EAASC,KAAKC,MAAMP,EAAQC,EAAU,IAGjCI,ECDYG,CAASP,EAASD,GAC/BS,EAAQhB,EAAW,EAAGW,GAEtBM,EAA4B,IAAhBR,EACZS,EAAWT,IAAgBE,EAC3BQ,EAAWV,EAAc,EACzBW,EAAWX,EAAc,EAEzBY,EAAe,SAACC,GAChBA,EAAOX,GAAcW,EAAO,GAIhCZ,EAAaY,IAGf,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UACEC,IACE,YACA,CACEC,SAAUR,IAIhBS,QAAS,kBAAML,EAAaF,IAT9B,SAWE,mBACE,UAAQ,WACRI,UAAU,YACVI,KAAI,WAAMR,GACV,gBAAeF,EAJjB,oBAUDD,EAAMY,KAAI,SAAAN,GAAI,OACb,oBAEEC,UACEC,IACE,YACA,CACEK,OAAQpB,IAAgBa,IAI9BI,QAAS,kBAAMhB,EAAaY,IAV9B,SAYE,mBAAG,UAAQ,WAAWC,UAAU,YAAYI,KAAI,WAAML,GAAtD,SAA+DA,KAX1DA,MAeT,oBACEC,UACEC,IACE,YACA,CACEC,SAAUP,IAIhBQ,QAAS,kBAAML,EAAaD,IAT9B,SAWE,mBACE,UAAQ,WACRG,UAAU,YACVI,KAAI,WAAMP,GACV,gBAAeF,EAJjB,wBCjFFY,EAAQ9B,EAAW,EAAG,IAAI4B,KAAI,SAAAxB,GAAC,qBAAYA,MAEpC2B,EAAgB,WAC3B,MAAgBC,mBAAS,IAAlBzB,EAAP,oBACA,EAA8ByB,mBAAS,GAAvC,mBAAOxB,EAAP,KAAgByB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoByB,EAApB,KAMMC,EAAS3B,EAAUC,EACnB2B,EAAUD,EAAS5B,EAAQA,EAAQ4B,EACnCE,EAAYF,EAAS3B,EAE3B,OACE,sBAAKe,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWd,EADX,mBACiC4B,EAAY,EAD7C,cACoDD,EADpD,eACkE7B,EADlE,OAIA,sBAAKgB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,MAAO/B,EACPgC,SAAU,SAAAC,GACRR,GAAYQ,EAAMC,OAAOH,OACzBL,EAAe,IAPnB,UAUE,wBAAQK,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEhB,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA3Ce,SAACY,GACpBY,EAAeZ,MA4Cb,6BACGQ,EAAMc,MAAMP,EAAWD,GAASR,KAAI,SAAAiB,GAAI,OACvC,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCzDlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fecc2476.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getPages(perPage: number, total: number): number {\n  let result = 0;\n\n  if (total % perPage === 0) {\n    result = total / perPage;\n  }\n\n  if (total % perPage !== 0) {\n    result = Math.floor(total / perPage + 1);\n  }\n\n  return result;\n}\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport classNames from 'classnames';\nimport { getNumbers, getPages } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  },\n) => {\n  const pagesCount = getPages(perPage, total);\n  const pages = getNumbers(1, pagesCount);\n\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === pagesCount;\n  const prevPage = currentPage - 1;\n  const nextPage = currentPage + 1;\n\n  const handleArrows = (page: number) => {\n    if (page > pagesCount || page < 1) {\n      return;\n    }\n\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={\n          classNames(\n            'page-item',\n            {\n              disabled: firstPage,\n            },\n          )\n        }\n        onClick={() => handleArrows(prevPage)}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href={`#${prevPage}`}\n          aria-disabled={firstPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={\n            classNames(\n              'page-item',\n              {\n                active: currentPage === page,\n              },\n            )\n          }\n          onClick={() => onPageChange(page)}\n        >\n          <a data-cy=\"pageLink\" className=\"page-link\" href={`#${page}`}>{page}</a>\n        </li>\n      ))}\n\n      <li\n        className={\n          classNames(\n            'page-item',\n            {\n              disabled: lastPage,\n            },\n          )\n        }\n        onClick={() => handleArrows(nextPage)}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href={`#${nextPage}`}\n          aria-disabled={lastPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [total] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const maxEnd = perPage * currentPage;\n  const itemEnd = maxEnd > total ? total : maxEnd;\n  const itemStart = maxEnd - perPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemStart + 1} - ${itemEnd} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {items.slice(itemStart, itemEnd).map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}